<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boot.sagu.mapper.RegionMapper">

   <insert id="insertRegion" parameterType="boot.sagu.dto.RegionDto">
      INSERT INTO regions VALUES (null,#{province},#{city},#{district},#{town},#{latitude},#{longitude})
   </insert>
   
    <select id="findRegionsByKeyword" resultType="boot.sagu.dto.RegionDto">
        SELECT * FROM regions
        WHERE 
            (province IS NOT NULL AND province LIKE CONCAT('%', #{keyword}, '%')) OR
            (city IS NOT NULL AND city LIKE CONCAT('%', #{keyword}, '%')) OR
            (district IS NOT NULL AND district LIKE CONCAT('%', #{keyword}, '%')) OR
            (town IS NOT NULL AND town LIKE CONCAT('%', #{keyword}, '%'))
        LIMIT 10
    </select>
    
    <!-- 페이지네이션을 위한 지역 목록 조회 -->
    <select id="getRegionsWithPagination" resultType="boot.sagu.dto.RegionDto">
        SELECT 
            region_id as regionId,
            province,
            city,
            district,
            town,
            latitude,
            longitude
        FROM regions
        ORDER BY region_id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>
    
    <!-- 전체 지역 개수 조회 -->
    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*) FROM regions
    </select>
    
    <!-- 지역 ID로 상세 조회 -->
    <select id="getRegionById" resultType="boot.sagu.dto.RegionDto">
        SELECT 
            region_id as regionId,
            province,
            city,
            district,
            town,
            latitude,
            longitude
        FROM regions
        WHERE region_id = #{regionId}
    </select>
    
    <!-- 지역 정보 수정 -->
    <update id="updateRegion" parameterType="boot.sagu.dto.RegionDto">
        UPDATE regions 
        SET 
            province = #{province},
            city = #{city},
            district = #{district},
            town = #{town},
            latitude = #{latitude},
            longitude = #{longitude}
        WHERE region_id = #{regionId}
    </update>
    
    <!-- 지역 삭제 -->
    <delete id="deleteRegion">
        DELETE FROM regions WHERE region_id = #{regionId}
    </delete>
    
    <!-- 모든 province 목록 조회 -->
    <select id="getDistinctProvinces" resultType="string">
        SELECT DISTINCT province 
        FROM regions 
        WHERE province IS NOT NULL AND province != ''
        ORDER BY province
    </select>
    
    <!-- 특정 province의 city 목록 조회 -->
    <select id="getCitiesByProvince" resultType="string">
        SELECT DISTINCT city 
        FROM regions 
        WHERE province = #{province} AND city IS NOT NULL AND city != ''
        ORDER BY city
    </select>
    
    <!-- 특정 city의 district 목록 조회 -->
    <select id="getDistrictsByCity" resultType="string">
        SELECT DISTINCT district 
        FROM regions 
        WHERE province = #{province} 
        <if test="city != null and city != ''">
            AND city = #{city}
        </if>
        <if test="city == null or city == ''">
            AND (city IS NULL OR city = '')
        </if>
        AND district IS NOT NULL AND district != ''
        ORDER BY district
    </select>
    
    <!-- 특정 district의 town 목록 조회 -->
    <select id="getTownsByDistrict" resultType="string">
        SELECT DISTINCT town 
        FROM regions 
        WHERE province = #{province} 
        <if test="city != null and city != ''">
            AND city = #{city}
        </if>
        <if test="city == null or city == ''">
            AND (city IS NULL OR city = '')
        </if>
        <if test="district != null and district != ''">
            AND district = #{district}
        </if>
        <if test="district == null or district == ''">
            AND (district IS NULL OR district = '')
        </if>
        AND town IS NOT NULL AND town != ''
        ORDER BY town
    </select>
    
    <!-- 키워드로 지역 검색 (자동완성용) -->
    <select id="searchRegionsByKeyword" resultType="boot.sagu.dto.RegionDto">
        SELECT 
            region_id as regionId,
            province,
            city,
            district,
            town,
            latitude,
            longitude
        FROM regions
        WHERE 
            (province IS NOT NULL AND province LIKE CONCAT('%', #{keyword}, '%')) OR
            (city IS NOT NULL AND city LIKE CONCAT('%', #{keyword}, '%')) OR
            (district IS NOT NULL AND district LIKE CONCAT('%', #{keyword}, '%')) OR
            (town IS NOT NULL AND town LIKE CONCAT('%', #{keyword}, '%'))
        ORDER BY 
            CASE 
                WHEN province LIKE CONCAT(#{keyword}, '%') THEN 1
                WHEN city LIKE CONCAT(#{keyword}, '%') THEN 2
                WHEN district LIKE CONCAT(#{keyword}, '%') THEN 3
                WHEN town LIKE CONCAT(#{keyword}, '%') THEN 4
                ELSE 5
            END,
            province, city, district, town
        LIMIT 10
    </select>
   
</mapper>