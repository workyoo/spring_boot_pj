<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boot.sagu.mapper.MemberRegionMapper">
    <insert id="insertMemberRegion" parameterType="boot.sagu.dto.MemberRegionDto">
        INSERT INTO member_regions (member_id, region_id, is_primary,created_at)
        VALUES (#{memberId}, #{regionId}, #{isPrimary}, NOW())
    </insert>

    <select id="countMemberRegionsByMemberId" resultType="int">
        SELECT COUNT(*) FROM member_regions WHERE member_id = #{memberId}
    </select>
    
    <select id="findMaxIsPrimaryByMemberId" resultType="int">
    	SELECT COALESCE(MAX(is_primary), 0) FROM member_regions WHERE member_id = #{memberId}
    </select>
    
    <!-- 회원의 주소 목록 조회 (간단한 형태) -->
    <select id="findMemberAddressesByMemberId" resultType="java.util.Map">
        SELECT 
            mr.member_region_id,
            mr.member_id,
            mr.region_id,
            mr.is_primary,
            r.province,
            r.city,
            r.district,
            r.town
        FROM member_regions mr
        INNER JOIN regions r ON mr.region_id = r.region_id
        WHERE mr.member_id = #{memberId}
        ORDER BY mr.is_primary DESC, mr.created_at ASC
    </select>
    
    <!-- 특정 주소 삭제 -->
    <delete id="deleteMemberAddress">
        DELETE FROM member_regions 
        WHERE member_region_id = #{memberRegionId} AND member_id = #{memberId}
    </delete>
    
    <!-- 가장 오래된 주소의 ID 조회 -->
    <select id="findOldestAddressId" resultType="java.lang.Integer">
        SELECT member_region_id 
        FROM member_regions 
        WHERE member_id = #{memberId} 
        ORDER BY created_at ASC 
        LIMIT 1
    </select>
    
    <!-- 다음 주소를 기본주소로 설정 -->
    <update id="setNextAddressAsPrimary">
        UPDATE member_regions 
        SET is_primary = 1 
        WHERE member_region_id = #{addressId}
    </update>
    
    <!-- 모든 주소의 기본주소 상태를 해제 -->
    <update id="clearAllPrimaryAddresses">
        UPDATE member_regions 
        SET is_primary = 0 
        WHERE member_id = #{memberId}
    </update>
    
</mapper>	